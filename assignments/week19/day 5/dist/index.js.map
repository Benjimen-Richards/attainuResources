{"version":3,"sources":["../src/index.js"],"names":["fruits_objects","fruits","b","set_type","prototype","color","console","log"],"mappings":";;AAMA;;AAEA;;;;AARA;AACA;AACA;AACA;AACA;AAMA,IAAMA,cAAc,GAAG,IAAIC,kBAAJ,EAAvB;AAEA,IAAMC,CAAC,GAAG,EAAV;AACAF,cAAc,CAACG,QAAf,CAAwB,UAAxB,EAAmC,OAAnC,EAA2CD,CAA3C;AACAF,cAAc,CAACG,QAAf,CAAwB,UAAxB,EAAmC,WAAnC,EAA+CD,CAA/C;AACAF,cAAc,CAACG,QAAf,CAAwB,YAAxB,EAAqC,cAArC,EAAoDD,CAApD;AAEAD,mBAAOG,SAAP,CAAiBC,KAAjB,GAAyB;AAAC,eAAc,QAAf;AAA0B,WAAU,WAApC;AAAkD,kBAAiB;AAAnE,CAAzB;AACAC,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACK,KAA3B;AACAC,OAAO,CAACC,GAAR,CAAYL,CAAZ","sourcesContent":["// • Build an object oriented sort of connection between a Fruit and an Apple.\r\n// • Every fruits_objects should have the name, color properties and methods naming ripe,\r\n// grow.\r\n// • The Apple fruits_objects should have properties of type, variety and also all other\r\n// additional methods. Any sort of Object oriented model is fine\r\n\r\nimport 'babel-polyfill';\r\n\r\nimport fruits from './fruits';\r\n\r\nconst fruits_objects = new fruits();\r\n\r\nconst b = {}\r\nfruits_objects.set_type('northern',\"apple\",b)\r\nfruits_objects.set_type('southern','pineapple',b)\r\nfruits_objects.set_type('meditarian','custardapple',b)\r\n\r\nfruits.prototype.color = {\"pineapple\" : \"orange\" , \"apple\" : \"royal red\" , \"custardapple\" : \"kind of grey\" }\r\nconsole.log(fruits_objects.color)\r\nconsole.log(b)"],"file":"index.js"}